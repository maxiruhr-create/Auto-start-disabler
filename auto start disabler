using System;
using System.IO;
using Microsoft.Win32;

namespace AutoStartDisabler
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("AutoStartDisabler - Disabling all auto-start entries...");

            // Remove files from Startup folders
            DisableStartupFolder(Environment.GetFolderPath(Environment.SpecialFolder.Startup));
            DisableStartupFolder(Environment.GetFolderPath(Environment.SpecialFolder.CommonStartup));

            // Remove registry entries (Current User)
            RemoveRegistryEntries(Registry.CurrentUser.OpenSubKey(@"Software\Microsoft\Windows\CurrentVersion\Run", true), "Current User");
            
            // Remove registry entries (Local Machine - requires admin privileges)
            try
            {
                RemoveRegistryEntries(Registry.LocalMachine.OpenSubKey(@"Software\Microsoft\Windows\CurrentVersion\Run", true), "Local Machine");
            }
            catch (UnauthorizedAccessException)
            {
                Console.WriteLine("WARNING: Could not access Local Machine registry keys (run as Administrator for full effect).");
            }

            Console.WriteLine("Done! Please restart your computer to see the effect.");
        }

        static void DisableStartupFolder(string folder)
        {
            if (Directory.Exists(folder))
            {
                foreach (var file in Directory.GetFiles(folder))
                {
                    try
                    {
                        File.Delete(file);
                        Console.WriteLine($"Deleted startup item: {file}");
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Could not delete {file}: {ex.Message}");
                    }
                }
            }
        }

        static void RemoveRegistryEntries(RegistryKey key, string scope)
        {
            if (key == null) return;
            foreach (var valueName in key.GetValueNames())
            {
                try
                {
                    key.DeleteValue(valueName);
                    Console.WriteLine($"Deleted registry auto-start ({scope}): {valueName}");
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Could not delete {valueName} in {scope}: {ex.Message}");
                }
            }
        }
    }
}
